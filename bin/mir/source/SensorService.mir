[ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 1; @symbol_importdef<0> = [Toybox,1,7,13]; @symbol_importdef<1> = [System,1,14,20]; ]
import Toybox.System;
[ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 2; @symbol_importdef<0> = [Toybox,2,7,13]; @symbol_importdef<1> = [Lang,2,14,18]; ]
import Toybox.Lang;
[ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 3; @symbol_importdef<0> = [Toybox,3,7,13]; @symbol_importdef<1> = [Sensor,3,14,20]; ]
import Toybox.Sensor;
[ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 4; @symbol_importdef<0> = [Toybox,4,7,13]; @symbol_importdef<1> = [SensorHistory,4,14,27]; ]
import Toybox.SensorHistory;
[ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 6; @symbol_moduledef = [SensorService,6,7,20]; ]
module SensorService {
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 6; ]
    <init> {
[ "C:\DEV\GymTracker\source\SensorService.mc" 9 8 ]
        %tmp.1 = newa 0 Array<Symbol>;
        symbol [ Array %tmp.1 9 33 38 ];
        symbol [ Symbol %tmp.1 9 39 45 ];
        putv self :availableSensors %tmp.1;
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 9; @position = 8; @symbol_vardef = [availableSensors,9,8,24]; ]
    var availableSensors;
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 10; @position = 8; @symbol_vardef = [sensorDelegate,10,8,22]; ]
    var sensorDelegate = null;
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 12; @symbol_functiondef = [initializeSensors,12,13,30]; ]
    function initializeSensors() as Void {
C__DEV_GymTracker_source_SensorService_mc_12_41_18_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 14 8 ]
        %tmp.1 = self;
        symbol [ checkDeviceCapabilities %tmp.2 14 8 31 ];
        %tmp.2 = getv function %tmp.1 :checkDeviceCapabilities;
        invoke %tmp.1 %tmp.2();
[ "C:\DEV\GymTracker\source\SensorService.mc" 17 8 ]
        %tmp.3 = self;
        symbol [ enableAvailableSensors %tmp.4 17 8 30 ];
        %tmp.4 = getv function %tmp.3 :enableAvailableSensors;
        invoke %tmp.3 %tmp.4();
C__DEV_GymTracker_source_SensorService_mc_12_41_18_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 20; @symbol_functiondef = [checkDeviceCapabilities,20,13,36]; ]
    function checkDeviceCapabilities() as Void {
C__DEV_GymTracker_source_SensorService_mc_20_47_59_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 21 8 ]
        %tmp.1 = newa 0;
        symbol [ availableSensors ? 21 8 24 ];
        putv self :availableSensors %tmp.1;
[ "C:\DEV\GymTracker\source\SensorService.mc" 23 8 ]
        try @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_beginTry @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_endTry @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_catch @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_finally;
C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_beginTry:
C__DEV_GymTracker_source_SensorService_mc_23_12_56_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 24 12 ]
        [ "C__DEV_GymTracker_source_SensorService_mc_23_12_56_8_start" "C__DEV_GymTracker_source_SensorService_mc_23_12_56_8_stop" ]
        %info.1 = local;
        symbol [ info %info.1 24 16 20 ];
        symbol [ Sensor %tmp.2 24 23 29 ];
        %tmp.2 = getm $.Toybox.Sensor;
        symbol [ getInfo %tmp.3 24 30 37 ];
        %tmp.3 = getv function %tmp.2 :getInfo;
        %tmp.4 = invoke %tmp.2 %tmp.3();
        lputv %info.1 %tmp.4;
        symbol [ info %info.1 24 16 20 ];
[ "C:\DEV\GymTracker\source\SensorService.mc" 27 12 ]
C__DEV_GymTracker_source_SensorService_mc_27_12_30_12_if_stmt:
        %tmp.5 = lgetv %info.1;
        symbol [ info %tmp.5 27 16 20 ];
        %tmp.7 = const :accel;
        symbol [ accel %tmp.7 27 26 31 const ];
        %tmp.8 = canhazplz %tmp.5 %tmp.7;
        bf %tmp.8 @C__DEV_GymTracker_source_SensorService_mc_27_12_30_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_27_12_30_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_27_33_30_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 28 16 ]
        symbol [ availableSensors %tmp.10 28 16 32 ];
        %tmp.10 = getv ? :availableSensors;
        symbol [ add %tmp.11 28 33 36 ];
        %tmp.11 = getv function %tmp.10 :add;
        %tmp.13 = const :accel;
        symbol [ accel %tmp.13 28 38 43 const ];
        invoke %tmp.10 %tmp.11(%tmp.13);
[ "C:\DEV\GymTracker\source\SensorService.mc" 29 16 ]
        symbol [ System %tmp.14 29 16 22 ];
        %tmp.14 = getm $.Toybox.System;
        symbol [ println %tmp.15 29 23 30 ];
        %tmp.15 = getv function %tmp.14 :println;
        %tmp.16 = "Accelerometer available";
        invoke %tmp.14 %tmp.15(%tmp.16);
C__DEV_GymTracker_source_SensorService_mc_27_33_30_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_27_12_30_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_27_12_30_12_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 33 12 ]
C__DEV_GymTracker_source_SensorService_mc_33_12_36_12_if_stmt:
        %tmp.17 = lgetv %info.1;
        symbol [ info %tmp.17 33 16 20 ];
        %tmp.19 = const :gyroscope;
        symbol [ gyroscope %tmp.19 33 26 35 const ];
        %tmp.20 = canhazplz %tmp.17 %tmp.19;
        bf %tmp.20 @C__DEV_GymTracker_source_SensorService_mc_33_12_36_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_33_12_36_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_33_37_36_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 34 16 ]
        symbol [ availableSensors %tmp.22 34 16 32 ];
        %tmp.22 = getv ? :availableSensors;
        symbol [ add %tmp.23 34 33 36 ];
        %tmp.23 = getv function %tmp.22 :add;
        %tmp.25 = const :gyroscope;
        symbol [ gyroscope %tmp.25 34 38 47 const ];
        invoke %tmp.22 %tmp.23(%tmp.25);
[ "C:\DEV\GymTracker\source\SensorService.mc" 35 16 ]
        symbol [ System %tmp.26 35 16 22 ];
        %tmp.26 = getm $.Toybox.System;
        symbol [ println %tmp.27 35 23 30 ];
        %tmp.27 = getv function %tmp.26 :println;
        %tmp.28 = "Gyroscope available";
        invoke %tmp.26 %tmp.27(%tmp.28);
C__DEV_GymTracker_source_SensorService_mc_33_37_36_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_33_12_36_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_33_12_36_12_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 39 12 ]
C__DEV_GymTracker_source_SensorService_mc_39_12_42_12_if_stmt:
        %tmp.29 = lgetv %info.1;
        symbol [ info %tmp.29 39 16 20 ];
        %tmp.31 = const :heartRate;
        symbol [ heartRate %tmp.31 39 26 35 const ];
        %tmp.32 = canhazplz %tmp.29 %tmp.31;
        bf %tmp.32 @C__DEV_GymTracker_source_SensorService_mc_39_12_42_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_39_12_42_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_39_37_42_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 40 16 ]
        symbol [ availableSensors %tmp.34 40 16 32 ];
        %tmp.34 = getv ? :availableSensors;
        symbol [ add %tmp.35 40 33 36 ];
        %tmp.35 = getv function %tmp.34 :add;
        %tmp.37 = const :heartRate;
        symbol [ heartRate %tmp.37 40 38 47 const ];
        invoke %tmp.34 %tmp.35(%tmp.37);
[ "C:\DEV\GymTracker\source\SensorService.mc" 41 16 ]
        symbol [ System %tmp.38 41 16 22 ];
        %tmp.38 = getm $.Toybox.System;
        symbol [ println %tmp.39 41 23 30 ];
        %tmp.39 = getv function %tmp.38 :println;
        %tmp.40 = "Heart Rate Monitor available";
        invoke %tmp.38 %tmp.39(%tmp.40);
C__DEV_GymTracker_source_SensorService_mc_39_37_42_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_39_12_42_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_39_12_42_12_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 45 12 ]
C__DEV_GymTracker_source_SensorService_mc_45_12_48_12_if_stmt:
        %tmp.41 = lgetv %info.1;
        symbol [ info %tmp.41 45 16 20 ];
        %tmp.43 = const :oxygenSaturation;
        symbol [ oxygenSaturation %tmp.43 45 26 42 const ];
        %tmp.44 = canhazplz %tmp.41 %tmp.43;
        bf %tmp.44 @C__DEV_GymTracker_source_SensorService_mc_45_12_48_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_45_12_48_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_45_44_48_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 46 16 ]
        symbol [ availableSensors %tmp.46 46 16 32 ];
        %tmp.46 = getv ? :availableSensors;
        symbol [ add %tmp.47 46 33 36 ];
        %tmp.47 = getv function %tmp.46 :add;
        %tmp.49 = const :oxygenSaturation;
        symbol [ oxygenSaturation %tmp.49 46 38 54 const ];
        invoke %tmp.46 %tmp.47(%tmp.49);
[ "C:\DEV\GymTracker\source\SensorService.mc" 47 16 ]
        symbol [ System %tmp.50 47 16 22 ];
        %tmp.50 = getm $.Toybox.System;
        symbol [ println %tmp.51 47 23 30 ];
        %tmp.51 = getv function %tmp.50 :println;
        %tmp.52 = "Pulse Oximetry available";
        invoke %tmp.50 %tmp.51(%tmp.52);
C__DEV_GymTracker_source_SensorService_mc_45_44_48_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_45_12_48_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_45_12_48_12_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 51 12 ]
C__DEV_GymTracker_source_SensorService_mc_51_12_54_12_if_stmt:
        %tmp.53 = lgetv %info.1;
        symbol [ info %tmp.53 51 16 20 ];
        %tmp.55 = const :temperature;
        symbol [ temperature %tmp.55 51 26 37 const ];
        %tmp.56 = canhazplz %tmp.53 %tmp.55;
        bf %tmp.56 @C__DEV_GymTracker_source_SensorService_mc_51_12_54_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_51_12_54_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_51_39_54_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 52 16 ]
        symbol [ availableSensors %tmp.58 52 16 32 ];
        %tmp.58 = getv ? :availableSensors;
        symbol [ add %tmp.59 52 33 36 ];
        %tmp.59 = getv function %tmp.58 :add;
        %tmp.61 = const :temperature;
        symbol [ temperature %tmp.61 52 38 49 const ];
        invoke %tmp.58 %tmp.59(%tmp.61);
[ "C:\DEV\GymTracker\source\SensorService.mc" 53 16 ]
        symbol [ System %tmp.62 53 16 22 ];
        %tmp.62 = getm $.Toybox.System;
        symbol [ println %tmp.63 53 23 30 ];
        %tmp.63 = getv function %tmp.62 :println;
        %tmp.64 = "Temperature sensor available";
        invoke %tmp.62 %tmp.63(%tmp.64);
C__DEV_GymTracker_source_SensorService_mc_51_39_54_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_51_12_54_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_51_12_54_12_if_end:
C__DEV_GymTracker_source_SensorService_mc_23_12_56_8_stop:
C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_endTry:
        jsr @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_finally;
        goto @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_end;
C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_catch:
        %tmp.65 = exception;
        push %tmp.65;
[ "C:\DEV\GymTracker\source\SensorService.mc" 56 10 ]
        [ "C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_catch" "C__DEV_GymTracker_source_SensorService_mc_56_10_58_8_end" ]
        %e.2 = local;
        symbol [ e %e.2 56 17 18 ];
        %tmp.66 = dup %tmp.65;
        lputv %e.2 %tmp.66;
        symbol [ e %e.2 56 17 18 ];
C__DEV_GymTracker_source_SensorService_mc_56_20_58_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 57 12 ]
        symbol [ System %tmp.67 57 12 18 ];
        %tmp.67 = getm $.Toybox.System;
        symbol [ println %tmp.68 57 19 26 ];
        %tmp.68 = getv function %tmp.67 :println;
        %tmp.69 = "Sensor capability check failed: ";
        %tmp.70 = lgetv %e.2;
        symbol [ e %tmp.70 57 64 65 ];
        symbol [ getErrorMessage %tmp.71 57 66 81 ];
        %tmp.71 = getv function %tmp.70 :getErrorMessage;
        %tmp.72 = invoke %tmp.70 %tmp.71();
        %tmp.73 = add %tmp.69 %tmp.72;
        invoke %tmp.67 %tmp.68(%tmp.73);
C__DEV_GymTracker_source_SensorService_mc_56_20_58_8_stop:
        jsr @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_finally;
        pop;
        goto @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_end;
C__DEV_GymTracker_source_SensorService_mc_56_10_58_8_end:
        try @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_catch @C__DEV_GymTracker_source_SensorService_mc_56_10_58_8_end @C__DEV_GymTracker_source_SensorService_mc_56_10_58_8_end @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_finally;
        jsr @C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_finally;
        throw %tmp.65;
C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_finally:
        jsrret;
C__DEV_GymTracker_source_SensorService_mc_23_8_58_8_end:
C__DEV_GymTracker_source_SensorService_mc_20_47_59_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 61; @symbol_functiondef = [enableAvailableSensors,61,13,35]; ]
    function enableAvailableSensors() as Void {
C__DEV_GymTracker_source_SensorService_mc_61_46_75_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 62 8 ]
C__DEV_GymTracker_source_SensorService_mc_62_8_65_8_if_stmt:
        symbol [ availableSensors %tmp.2 62 12 28 ];
        %tmp.2 = getv ? :availableSensors;
        symbol [ size %tmp.3 62 29 33 ];
        %tmp.3 = getv function %tmp.2 :size;
        %tmp.4 = invoke %tmp.2 %tmp.3();
        %tmp.5 = 0;
        %tmp.6 = eq %tmp.4 %tmp.5;
        bf %tmp.6 @C__DEV_GymTracker_source_SensorService_mc_62_8_65_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_62_8_65_8_if_true:
C__DEV_GymTracker_source_SensorService_mc_62_42_65_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 63 12 ]
        symbol [ System %tmp.7 63 12 18 ];
        %tmp.7 = getm $.Toybox.System;
        symbol [ println %tmp.8 63 19 26 ];
        %tmp.8 = getv function %tmp.7 :println;
        %tmp.9 = "No sensors available on this device";
        invoke %tmp.7 %tmp.8(%tmp.9);
[ "C:\DEV\GymTracker\source\SensorService.mc" 64 12 ]
        ret ?;
C__DEV_GymTracker_source_SensorService_mc_62_42_65_8_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_62_8_65_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_62_8_65_8_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 67 8 ]
        try @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_beginTry @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_endTry @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_catch @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_finally;
C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_beginTry:
C__DEV_GymTracker_source_SensorService_mc_67_12_72_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 70 12 ]
        symbol [ System %tmp.10 70 12 18 ];
        %tmp.10 = getm $.Toybox.System;
        symbol [ println %tmp.11 70 19 26 ];
        %tmp.11 = getv function %tmp.10 :println;
        %tmp.12 = "Sensors ready for use";
        invoke %tmp.10 %tmp.11(%tmp.12);
C__DEV_GymTracker_source_SensorService_mc_67_12_72_8_stop:
C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_endTry:
        jsr @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_finally;
        goto @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_end;
C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_catch:
        %tmp.13 = exception;
        push %tmp.13;
[ "C:\DEV\GymTracker\source\SensorService.mc" 72 10 ]
        [ "C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_catch" "C__DEV_GymTracker_source_SensorService_mc_72_10_74_8_end" ]
        %e.1 = local;
        symbol [ e %e.1 72 17 18 ];
        %tmp.14 = dup %tmp.13;
        lputv %e.1 %tmp.14;
        symbol [ e %e.1 72 17 18 ];
C__DEV_GymTracker_source_SensorService_mc_72_20_74_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 73 12 ]
        symbol [ System %tmp.15 73 12 18 ];
        %tmp.15 = getm $.Toybox.System;
        symbol [ println %tmp.16 73 19 26 ];
        %tmp.16 = getv function %tmp.15 :println;
        %tmp.17 = "Failed to prepare sensors: ";
        %tmp.18 = lgetv %e.1;
        symbol [ e %tmp.18 73 59 60 ];
        symbol [ getErrorMessage %tmp.19 73 61 76 ];
        %tmp.19 = getv function %tmp.18 :getErrorMessage;
        %tmp.20 = invoke %tmp.18 %tmp.19();
        %tmp.21 = add %tmp.17 %tmp.20;
        invoke %tmp.15 %tmp.16(%tmp.21);
C__DEV_GymTracker_source_SensorService_mc_72_20_74_8_stop:
        jsr @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_finally;
        pop;
        goto @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_end;
C__DEV_GymTracker_source_SensorService_mc_72_10_74_8_end:
        try @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_catch @C__DEV_GymTracker_source_SensorService_mc_72_10_74_8_end @C__DEV_GymTracker_source_SensorService_mc_72_10_74_8_end @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_finally;
        jsr @C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_finally;
        throw %tmp.13;
C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_finally:
        jsrret;
C__DEV_GymTracker_source_SensorService_mc_67_8_74_8_end:
C__DEV_GymTracker_source_SensorService_mc_61_46_75_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 77; @symbol_functiondef = [registerDataListener,77,13,33]; @symbol_param<0> = [delegate,77,34,42]; ]
    function registerDataListener(delegate) as Void {
C__DEV_GymTracker_source_SensorService_mc_77_52_88_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 78 8 ]
        %tmp.1 = lgetv %delegate;
        symbol [ delegate %tmp.1 78 25 33 ];
        symbol [ sensorDelegate ? 78 8 22 ];
        putv self :sensorDelegate %tmp.1;
[ "C:\DEV\GymTracker\source\SensorService.mc" 80 8 ]
        try @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_beginTry @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_endTry @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_catch @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_finally;
C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_beginTry:
C__DEV_GymTracker_source_SensorService_mc_80_12_85_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 83 12 ]
        symbol [ System %tmp.2 83 12 18 ];
        %tmp.2 = getm $.Toybox.System;
        symbol [ println %tmp.3 83 19 26 ];
        %tmp.3 = getv function %tmp.2 :println;
        %tmp.4 = "Sensor delegate registered for polling";
        invoke %tmp.2 %tmp.3(%tmp.4);
C__DEV_GymTracker_source_SensorService_mc_80_12_85_8_stop:
C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_endTry:
        jsr @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_finally;
        goto @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_end;
C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_catch:
        %tmp.5 = exception;
        push %tmp.5;
[ "C:\DEV\GymTracker\source\SensorService.mc" 85 10 ]
        [ "C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_catch" "C__DEV_GymTracker_source_SensorService_mc_85_10_87_8_end" ]
        %e.1 = local;
        symbol [ e %e.1 85 17 18 ];
        %tmp.6 = dup %tmp.5;
        lputv %e.1 %tmp.6;
        symbol [ e %e.1 85 17 18 ];
C__DEV_GymTracker_source_SensorService_mc_85_20_87_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 86 12 ]
        symbol [ System %tmp.7 86 12 18 ];
        %tmp.7 = getm $.Toybox.System;
        symbol [ println %tmp.8 86 19 26 ];
        %tmp.8 = getv function %tmp.7 :println;
        %tmp.9 = "Failed to register sensor listener: ";
        %tmp.10 = lgetv %e.1;
        symbol [ e %tmp.10 86 68 69 ];
        symbol [ getErrorMessage %tmp.11 86 70 85 ];
        %tmp.11 = getv function %tmp.10 :getErrorMessage;
        %tmp.12 = invoke %tmp.10 %tmp.11();
        %tmp.13 = add %tmp.9 %tmp.12;
        invoke %tmp.7 %tmp.8(%tmp.13);
C__DEV_GymTracker_source_SensorService_mc_85_20_87_8_stop:
        jsr @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_finally;
        pop;
        goto @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_end;
C__DEV_GymTracker_source_SensorService_mc_85_10_87_8_end:
        try @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_catch @C__DEV_GymTracker_source_SensorService_mc_85_10_87_8_end @C__DEV_GymTracker_source_SensorService_mc_85_10_87_8_end @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_finally;
        jsr @C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_finally;
        throw %tmp.5;
C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_finally:
        jsrret;
C__DEV_GymTracker_source_SensorService_mc_80_8_87_8_end:
C__DEV_GymTracker_source_SensorService_mc_77_52_88_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 90; @symbol_functiondef = [unregisterDataListener,90,13,35]; ]
    function unregisterDataListener() as Void {
C__DEV_GymTracker_source_SensorService_mc_90_46_97_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 91 8 ]
        try @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_beginTry @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_endTry @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_catch @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_finally;
C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_beginTry:
C__DEV_GymTracker_source_SensorService_mc_91_12_94_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 92 12 ]
        %tmp.1 = null;
        symbol [ sensorDelegate ? 92 12 26 ];
        putv self :sensorDelegate %tmp.1;
[ "C:\DEV\GymTracker\source\SensorService.mc" 93 12 ]
        symbol [ System %tmp.2 93 12 18 ];
        %tmp.2 = getm $.Toybox.System;
        symbol [ println %tmp.3 93 19 26 ];
        %tmp.3 = getv function %tmp.2 :println;
        %tmp.4 = "Sensor data listener unregistered";
        invoke %tmp.2 %tmp.3(%tmp.4);
C__DEV_GymTracker_source_SensorService_mc_91_12_94_8_stop:
C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_endTry:
        jsr @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_finally;
        goto @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_end;
C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_catch:
        %tmp.5 = exception;
        push %tmp.5;
[ "C:\DEV\GymTracker\source\SensorService.mc" 94 10 ]
        [ "C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_catch" "C__DEV_GymTracker_source_SensorService_mc_94_10_96_8_end" ]
        %e.1 = local;
        symbol [ e %e.1 94 17 18 ];
        %tmp.6 = dup %tmp.5;
        lputv %e.1 %tmp.6;
        symbol [ e %e.1 94 17 18 ];
C__DEV_GymTracker_source_SensorService_mc_94_20_96_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 95 12 ]
        symbol [ System %tmp.7 95 12 18 ];
        %tmp.7 = getm $.Toybox.System;
        symbol [ println %tmp.8 95 19 26 ];
        %tmp.8 = getv function %tmp.7 :println;
        %tmp.9 = "Failed to unregister sensor listener: ";
        %tmp.10 = lgetv %e.1;
        symbol [ e %tmp.10 95 70 71 ];
        symbol [ getErrorMessage %tmp.11 95 72 87 ];
        %tmp.11 = getv function %tmp.10 :getErrorMessage;
        %tmp.12 = invoke %tmp.10 %tmp.11();
        %tmp.13 = add %tmp.9 %tmp.12;
        invoke %tmp.7 %tmp.8(%tmp.13);
C__DEV_GymTracker_source_SensorService_mc_94_20_96_8_stop:
        jsr @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_finally;
        pop;
        goto @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_end;
C__DEV_GymTracker_source_SensorService_mc_94_10_96_8_end:
        try @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_catch @C__DEV_GymTracker_source_SensorService_mc_94_10_96_8_end @C__DEV_GymTracker_source_SensorService_mc_94_10_96_8_end @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_finally;
        jsr @C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_finally;
        throw %tmp.5;
C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_finally:
        jsrret;
C__DEV_GymTracker_source_SensorService_mc_91_8_96_8_end:
C__DEV_GymTracker_source_SensorService_mc_90_46_97_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 100; @symbol_functiondef = [pollSensorData,100,13,27]; @symbol_return<0> = [Dictionary,100,33,43]; ]
    function pollSensorData() as Dictionary {
C__DEV_GymTracker_source_SensorService_mc_100_44_131_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 101 8 ]
        [ "C__DEV_GymTracker_source_SensorService_mc_100_44_131_4_start" "C__DEV_GymTracker_source_SensorService_mc_100_44_131_4_stop" ]
        %data.1 = local;
        symbol [ data %data.1 101 12 16 ];
        %tmp.1 = newd 0;
        lputv %data.1 %tmp.1;
        symbol [ data %data.1 101 12 16 ];
[ "C:\DEV\GymTracker\source\SensorService.mc" 103 8 ]
        try @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_beginTry @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_endTry @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_catch @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_finally;
C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_beginTry:
C__DEV_GymTracker_source_SensorService_mc_103_12_126_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 104 12 ]
        [ "C__DEV_GymTracker_source_SensorService_mc_103_12_126_8_start" "C__DEV_GymTracker_source_SensorService_mc_103_12_126_8_stop" ]
        %sensorInfo.2 = local;
        symbol [ sensorInfo %sensorInfo.2 104 16 26 ];
        symbol [ Sensor %tmp.2 104 29 35 ];
        %tmp.2 = getm $.Toybox.Sensor;
        symbol [ getInfo %tmp.3 104 36 43 ];
        %tmp.3 = getv function %tmp.2 :getInfo;
        %tmp.4 = invoke %tmp.2 %tmp.3();
        lputv %sensorInfo.2 %tmp.4;
        symbol [ sensorInfo %sensorInfo.2 104 16 26 ];
[ "C:\DEV\GymTracker\source\SensorService.mc" 106 12 ]
C__DEV_GymTracker_source_SensorService_mc_106_12_108_12_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_106_16_106_83_begin:
C__DEV_GymTracker_source_SensorService_mc_106_16_106_54_begin:
        %tmp.5 = self;
        symbol [ hasAccelerometer %tmp.6 106 16 32 ];
        %tmp.6 = getv function %tmp.5 :hasAccelerometer;
        %tmp.7 = invoke %tmp.5 %tmp.6();
        bf %tmp.7 @C__DEV_GymTracker_source_SensorService_mc_106_12_108_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_106_38_106_54_true:
        %tmp.8 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.8 106 38 48 ];
        %tmp.10 = const :accel;
        symbol [ accel %tmp.10 106 54 59 const ];
        %tmp.11 = canhazplz %tmp.8 %tmp.10;
        push %tmp.11;
C__DEV_GymTracker_source_SensorService_mc_106_38_106_54_end:
        %tmp.12 = phi [%tmp.7 @C__DEV_GymTracker_source_SensorService_mc_106_16_106_54_begin] [%tmp.11 @C__DEV_GymTracker_source_SensorService_mc_106_38_106_54_true] [%tmp.12 @C__DEV_GymTracker_source_SensorService_mc_106_38_106_54_end];
        bf %tmp.12 @C__DEV_GymTracker_source_SensorService_mc_106_12_108_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_106_63_106_83_true:
        %tmp.13 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.13 106 63 73 ];
        %tmp.14 = as %tmp.13 { (interface { var accel; }) };
        symbol [ accel %tmp.15 106 74 79 ];
        %tmp.15 = getv %tmp.14 :accel;
        %tmp.16 = null;
        %tmp.17 = ne %tmp.15 %tmp.16;
        push %tmp.17;
C__DEV_GymTracker_source_SensorService_mc_106_63_106_83_end:
        %tmp.18 = phi [%tmp.12 @C__DEV_GymTracker_source_SensorService_mc_106_16_106_83_begin] [%tmp.17 @C__DEV_GymTracker_source_SensorService_mc_106_63_106_83_true] [%tmp.18 @C__DEV_GymTracker_source_SensorService_mc_106_63_106_83_end];
        bf %tmp.18 @C__DEV_GymTracker_source_SensorService_mc_106_12_108_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_106_12_108_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_106_89_108_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 107 16 ]
        %tmp.19 = lgetv %data.1;
        symbol [ data %tmp.19 107 16 20 ];
        %tmp.20 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.20 107 31 41 ];
        %tmp.21 = as %tmp.20 { (interface { var accel; }) };
        symbol [ accel %tmp.22 107 42 47 ];
        %tmp.22 = getv %tmp.21 :accel;
        %tmp.24 = const :accel;
        symbol [ accel %tmp.24 107 22 27 const ];
        aputv %tmp.19 %tmp.24 %tmp.22;
C__DEV_GymTracker_source_SensorService_mc_106_89_108_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_106_12_108_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_106_12_108_12_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 110 12 ]
C__DEV_GymTracker_source_SensorService_mc_110_12_112_12_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_110_16_110_87_begin:
C__DEV_GymTracker_source_SensorService_mc_110_16_110_50_begin:
        %tmp.25 = self;
        symbol [ hasGyroscope %tmp.26 110 16 28 ];
        %tmp.26 = getv function %tmp.25 :hasGyroscope;
        %tmp.27 = invoke %tmp.25 %tmp.26();
        bf %tmp.27 @C__DEV_GymTracker_source_SensorService_mc_110_12_112_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_110_34_110_50_true:
        %tmp.28 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.28 110 34 44 ];
        %tmp.30 = const :gyroscope;
        symbol [ gyroscope %tmp.30 110 50 59 const ];
        %tmp.31 = canhazplz %tmp.28 %tmp.30;
        push %tmp.31;
C__DEV_GymTracker_source_SensorService_mc_110_34_110_50_end:
        %tmp.32 = phi [%tmp.27 @C__DEV_GymTracker_source_SensorService_mc_110_16_110_50_begin] [%tmp.31 @C__DEV_GymTracker_source_SensorService_mc_110_34_110_50_true] [%tmp.32 @C__DEV_GymTracker_source_SensorService_mc_110_34_110_50_end];
        bf %tmp.32 @C__DEV_GymTracker_source_SensorService_mc_110_12_112_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_110_63_110_87_true:
        %tmp.33 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.33 110 63 73 ];
        %tmp.34 = as %tmp.33 { (interface { var gyroscope; }) };
        symbol [ gyroscope %tmp.35 110 74 83 ];
        %tmp.35 = getv %tmp.34 :gyroscope;
        %tmp.36 = null;
        %tmp.37 = ne %tmp.35 %tmp.36;
        push %tmp.37;
C__DEV_GymTracker_source_SensorService_mc_110_63_110_87_end:
        %tmp.38 = phi [%tmp.32 @C__DEV_GymTracker_source_SensorService_mc_110_16_110_87_begin] [%tmp.37 @C__DEV_GymTracker_source_SensorService_mc_110_63_110_87_true] [%tmp.38 @C__DEV_GymTracker_source_SensorService_mc_110_63_110_87_end];
        bf %tmp.38 @C__DEV_GymTracker_source_SensorService_mc_110_12_112_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_110_12_112_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_110_93_112_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 111 16 ]
        %tmp.39 = lgetv %data.1;
        symbol [ data %tmp.39 111 16 20 ];
        %tmp.40 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.40 111 35 45 ];
        %tmp.41 = as %tmp.40 { (interface { var gyroscope; }) };
        symbol [ gyroscope %tmp.42 111 46 55 ];
        %tmp.42 = getv %tmp.41 :gyroscope;
        %tmp.44 = const :gyroscope;
        symbol [ gyroscope %tmp.44 111 22 31 const ];
        aputv %tmp.39 %tmp.44 %tmp.42;
C__DEV_GymTracker_source_SensorService_mc_110_93_112_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_110_12_112_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_110_12_112_12_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 114 12 ]
C__DEV_GymTracker_source_SensorService_mc_114_12_116_12_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_114_16_114_87_begin:
C__DEV_GymTracker_source_SensorService_mc_114_16_114_50_begin:
        %tmp.45 = self;
        symbol [ hasHeartRate %tmp.46 114 16 28 ];
        %tmp.46 = getv function %tmp.45 :hasHeartRate;
        %tmp.47 = invoke %tmp.45 %tmp.46();
        bf %tmp.47 @C__DEV_GymTracker_source_SensorService_mc_114_12_116_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_114_34_114_50_true:
        %tmp.48 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.48 114 34 44 ];
        %tmp.50 = const :heartRate;
        symbol [ heartRate %tmp.50 114 50 59 const ];
        %tmp.51 = canhazplz %tmp.48 %tmp.50;
        push %tmp.51;
C__DEV_GymTracker_source_SensorService_mc_114_34_114_50_end:
        %tmp.52 = phi [%tmp.47 @C__DEV_GymTracker_source_SensorService_mc_114_16_114_50_begin] [%tmp.51 @C__DEV_GymTracker_source_SensorService_mc_114_34_114_50_true] [%tmp.52 @C__DEV_GymTracker_source_SensorService_mc_114_34_114_50_end];
        bf %tmp.52 @C__DEV_GymTracker_source_SensorService_mc_114_12_116_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_114_63_114_87_true:
        %tmp.53 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.53 114 63 73 ];
        %tmp.54 = as %tmp.53 { (interface { var heartRate; }) };
        symbol [ heartRate %tmp.55 114 74 83 ];
        %tmp.55 = getv %tmp.54 :heartRate;
        %tmp.56 = null;
        %tmp.57 = ne %tmp.55 %tmp.56;
        push %tmp.57;
C__DEV_GymTracker_source_SensorService_mc_114_63_114_87_end:
        %tmp.58 = phi [%tmp.52 @C__DEV_GymTracker_source_SensorService_mc_114_16_114_87_begin] [%tmp.57 @C__DEV_GymTracker_source_SensorService_mc_114_63_114_87_true] [%tmp.58 @C__DEV_GymTracker_source_SensorService_mc_114_63_114_87_end];
        bf %tmp.58 @C__DEV_GymTracker_source_SensorService_mc_114_12_116_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_114_12_116_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_114_93_116_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 115 16 ]
        %tmp.59 = lgetv %data.1;
        symbol [ data %tmp.59 115 16 20 ];
        %tmp.60 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.60 115 35 45 ];
        %tmp.61 = as %tmp.60 { (interface { var heartRate; }) };
        symbol [ heartRate %tmp.62 115 46 55 ];
        %tmp.62 = getv %tmp.61 :heartRate;
        %tmp.64 = const :heartRate;
        symbol [ heartRate %tmp.64 115 22 31 const ];
        aputv %tmp.59 %tmp.64 %tmp.62;
C__DEV_GymTracker_source_SensorService_mc_114_93_116_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_114_12_116_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_114_12_116_12_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 118 12 ]
C__DEV_GymTracker_source_SensorService_mc_118_12_120_12_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_118_16_118_99_begin:
C__DEV_GymTracker_source_SensorService_mc_118_16_118_48_begin:
        %tmp.65 = self;
        symbol [ hasPulseOx %tmp.66 118 16 26 ];
        %tmp.66 = getv function %tmp.65 :hasPulseOx;
        %tmp.67 = invoke %tmp.65 %tmp.66();
        bf %tmp.67 @C__DEV_GymTracker_source_SensorService_mc_118_12_120_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_118_32_118_48_true:
        %tmp.68 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.68 118 32 42 ];
        %tmp.70 = const :oxygenSaturation;
        symbol [ oxygenSaturation %tmp.70 118 48 64 const ];
        %tmp.71 = canhazplz %tmp.68 %tmp.70;
        push %tmp.71;
C__DEV_GymTracker_source_SensorService_mc_118_32_118_48_end:
        %tmp.72 = phi [%tmp.67 @C__DEV_GymTracker_source_SensorService_mc_118_16_118_48_begin] [%tmp.71 @C__DEV_GymTracker_source_SensorService_mc_118_32_118_48_true] [%tmp.72 @C__DEV_GymTracker_source_SensorService_mc_118_32_118_48_end];
        bf %tmp.72 @C__DEV_GymTracker_source_SensorService_mc_118_12_120_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_118_68_118_99_true:
        %tmp.73 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.73 118 68 78 ];
        %tmp.74 = as %tmp.73 { (interface { var oxygenSaturation; }) };
        symbol [ oxygenSaturation %tmp.75 118 79 95 ];
        %tmp.75 = getv %tmp.74 :oxygenSaturation;
        %tmp.76 = null;
        %tmp.77 = ne %tmp.75 %tmp.76;
        push %tmp.77;
C__DEV_GymTracker_source_SensorService_mc_118_68_118_99_end:
        %tmp.78 = phi [%tmp.72 @C__DEV_GymTracker_source_SensorService_mc_118_16_118_99_begin] [%tmp.77 @C__DEV_GymTracker_source_SensorService_mc_118_68_118_99_true] [%tmp.78 @C__DEV_GymTracker_source_SensorService_mc_118_68_118_99_end];
        bf %tmp.78 @C__DEV_GymTracker_source_SensorService_mc_118_12_120_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_118_12_120_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_118_105_120_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 119 16 ]
        %tmp.79 = lgetv %data.1;
        symbol [ data %tmp.79 119 16 20 ];
        %tmp.80 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.80 119 42 52 ];
        %tmp.81 = as %tmp.80 { (interface { var oxygenSaturation; }) };
        symbol [ oxygenSaturation %tmp.82 119 53 69 ];
        %tmp.82 = getv %tmp.81 :oxygenSaturation;
        %tmp.84 = const :oxygenSaturation;
        symbol [ oxygenSaturation %tmp.84 119 22 38 const ];
        aputv %tmp.79 %tmp.84 %tmp.82;
C__DEV_GymTracker_source_SensorService_mc_118_105_120_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_118_12_120_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_118_12_120_12_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 122 12 ]
C__DEV_GymTracker_source_SensorService_mc_122_12_124_12_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_122_16_122_93_begin:
C__DEV_GymTracker_source_SensorService_mc_122_16_122_52_begin:
        %tmp.85 = self;
        symbol [ hasTemperature %tmp.86 122 16 30 ];
        %tmp.86 = getv function %tmp.85 :hasTemperature;
        %tmp.87 = invoke %tmp.85 %tmp.86();
        bf %tmp.87 @C__DEV_GymTracker_source_SensorService_mc_122_12_124_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_122_36_122_52_true:
        %tmp.88 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.88 122 36 46 ];
        %tmp.90 = const :temperature;
        symbol [ temperature %tmp.90 122 52 63 const ];
        %tmp.91 = canhazplz %tmp.88 %tmp.90;
        push %tmp.91;
C__DEV_GymTracker_source_SensorService_mc_122_36_122_52_end:
        %tmp.92 = phi [%tmp.87 @C__DEV_GymTracker_source_SensorService_mc_122_16_122_52_begin] [%tmp.91 @C__DEV_GymTracker_source_SensorService_mc_122_36_122_52_true] [%tmp.92 @C__DEV_GymTracker_source_SensorService_mc_122_36_122_52_end];
        bf %tmp.92 @C__DEV_GymTracker_source_SensorService_mc_122_12_124_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_122_67_122_93_true:
        %tmp.93 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.93 122 67 77 ];
        %tmp.94 = as %tmp.93 { (interface { var temperature; }) };
        symbol [ temperature %tmp.95 122 78 89 ];
        %tmp.95 = getv %tmp.94 :temperature;
        %tmp.96 = null;
        %tmp.97 = ne %tmp.95 %tmp.96;
        push %tmp.97;
C__DEV_GymTracker_source_SensorService_mc_122_67_122_93_end:
        %tmp.98 = phi [%tmp.92 @C__DEV_GymTracker_source_SensorService_mc_122_16_122_93_begin] [%tmp.97 @C__DEV_GymTracker_source_SensorService_mc_122_67_122_93_true] [%tmp.98 @C__DEV_GymTracker_source_SensorService_mc_122_67_122_93_end];
        bf %tmp.98 @C__DEV_GymTracker_source_SensorService_mc_122_12_124_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_122_12_124_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_122_99_124_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 123 16 ]
        %tmp.99 = lgetv %data.1;
        symbol [ data %tmp.99 123 16 20 ];
        %tmp.100 = lgetv %sensorInfo.2;
        symbol [ sensorInfo %tmp.100 123 37 47 ];
        %tmp.101 = as %tmp.100 { (interface { var temperature; }) };
        symbol [ temperature %tmp.102 123 48 59 ];
        %tmp.102 = getv %tmp.101 :temperature;
        %tmp.104 = const :temperature;
        symbol [ temperature %tmp.104 123 22 33 const ];
        aputv %tmp.99 %tmp.104 %tmp.102;
C__DEV_GymTracker_source_SensorService_mc_122_99_124_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_122_12_124_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_122_12_124_12_if_end:
C__DEV_GymTracker_source_SensorService_mc_103_12_126_8_stop:
C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_endTry:
        jsr @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_finally;
        goto @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_end;
C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_catch:
        %tmp.105 = exception;
        push %tmp.105;
[ "C:\DEV\GymTracker\source\SensorService.mc" 126 10 ]
        [ "C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_catch" "C__DEV_GymTracker_source_SensorService_mc_126_10_128_8_end" ]
        %e.3 = local;
        symbol [ e %e.3 126 17 18 ];
        %tmp.106 = dup %tmp.105;
        lputv %e.3 %tmp.106;
        symbol [ e %e.3 126 17 18 ];
C__DEV_GymTracker_source_SensorService_mc_126_20_128_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 127 12 ]
        symbol [ System %tmp.107 127 12 18 ];
        %tmp.107 = getm $.Toybox.System;
        symbol [ println %tmp.108 127 19 26 ];
        %tmp.108 = getv function %tmp.107 :println;
        %tmp.109 = "Error polling sensor data: ";
        %tmp.110 = lgetv %e.3;
        symbol [ e %tmp.110 127 59 60 ];
        symbol [ getErrorMessage %tmp.111 127 61 76 ];
        %tmp.111 = getv function %tmp.110 :getErrorMessage;
        %tmp.112 = invoke %tmp.110 %tmp.111();
        %tmp.113 = add %tmp.109 %tmp.112;
        invoke %tmp.107 %tmp.108(%tmp.113);
C__DEV_GymTracker_source_SensorService_mc_126_20_128_8_stop:
        jsr @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_finally;
        pop;
        goto @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_end;
C__DEV_GymTracker_source_SensorService_mc_126_10_128_8_end:
        try @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_catch @C__DEV_GymTracker_source_SensorService_mc_126_10_128_8_end @C__DEV_GymTracker_source_SensorService_mc_126_10_128_8_end @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_finally;
        jsr @C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_finally;
        throw %tmp.105;
C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_finally:
        jsrret;
C__DEV_GymTracker_source_SensorService_mc_103_8_128_8_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 130 8 ]
        %tmp.114 = lgetv %data.1;
        symbol [ data %tmp.114 130 15 19 ];
        ret %tmp.114;
C__DEV_GymTracker_source_SensorService_mc_100_44_131_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 134; @symbol_functiondef = [findSensorIndex,134,13,28]; @symbol_param<0> = [sensorType,134,29,39]; @symbol_param<0>_type<0> = [Symbol,134,43,49]; @symbol_return<0> = [Number,134,54,60]; ]
    function findSensorIndex(sensorType as Symbol) as Number {
C__DEV_GymTracker_source_SensorService_mc_134_61_136_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 135 8 ]
        symbol [ availableSensors %tmp.2 135 15 31 ];
        %tmp.2 = getv ? :availableSensors;
        symbol [ indexOf %tmp.3 135 32 39 ];
        %tmp.3 = getv function %tmp.2 :indexOf;
        %tmp.4 = lgetv %sensorType;
        symbol [ sensorType %tmp.4 135 40 50 ];
        %tmp.5 = invoke %tmp.2 %tmp.3(%tmp.4);
        ret %tmp.5;
C__DEV_GymTracker_source_SensorService_mc_134_61_136_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 139; @symbol_functiondef = [hasAccelerometer,139,13,29]; @symbol_return<0> = [Boolean,139,35,42]; ]
    function hasAccelerometer() as Boolean {
C__DEV_GymTracker_source_SensorService_mc_139_43_141_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 140 8 ]
        %tmp.1 = self;
        symbol [ findSensorIndex %tmp.2 140 15 30 ];
        %tmp.2 = getv function %tmp.1 :findSensorIndex;
        %tmp.4 = const :accel;
        symbol [ accel %tmp.4 140 32 37 const ];
        %tmp.5 = invoke %tmp.1 %tmp.2(%tmp.4);
        %tmp.6 = -1;
        %tmp.7 = ne %tmp.5 %tmp.6;
        ret %tmp.7;
C__DEV_GymTracker_source_SensorService_mc_139_43_141_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 143; @symbol_functiondef = [hasGyroscope,143,13,25]; @symbol_return<0> = [Boolean,143,31,38]; ]
    function hasGyroscope() as Boolean {
C__DEV_GymTracker_source_SensorService_mc_143_39_145_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 144 8 ]
        %tmp.1 = self;
        symbol [ findSensorIndex %tmp.2 144 15 30 ];
        %tmp.2 = getv function %tmp.1 :findSensorIndex;
        %tmp.4 = const :gyroscope;
        symbol [ gyroscope %tmp.4 144 32 41 const ];
        %tmp.5 = invoke %tmp.1 %tmp.2(%tmp.4);
        %tmp.6 = -1;
        %tmp.7 = ne %tmp.5 %tmp.6;
        ret %tmp.7;
C__DEV_GymTracker_source_SensorService_mc_143_39_145_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 147; @symbol_functiondef = [hasHeartRate,147,13,25]; @symbol_return<0> = [Boolean,147,31,38]; ]
    function hasHeartRate() as Boolean {
C__DEV_GymTracker_source_SensorService_mc_147_39_149_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 148 8 ]
        %tmp.1 = self;
        symbol [ findSensorIndex %tmp.2 148 15 30 ];
        %tmp.2 = getv function %tmp.1 :findSensorIndex;
        %tmp.4 = const :heartRate;
        symbol [ heartRate %tmp.4 148 32 41 const ];
        %tmp.5 = invoke %tmp.1 %tmp.2(%tmp.4);
        %tmp.6 = -1;
        %tmp.7 = ne %tmp.5 %tmp.6;
        ret %tmp.7;
C__DEV_GymTracker_source_SensorService_mc_147_39_149_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 151; @symbol_functiondef = [hasPulseOx,151,13,23]; @symbol_return<0> = [Boolean,151,29,36]; ]
    function hasPulseOx() as Boolean {
C__DEV_GymTracker_source_SensorService_mc_151_37_153_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 152 8 ]
        %tmp.1 = self;
        symbol [ findSensorIndex %tmp.2 152 15 30 ];
        %tmp.2 = getv function %tmp.1 :findSensorIndex;
        %tmp.4 = const :oxygenSaturation;
        symbol [ oxygenSaturation %tmp.4 152 32 48 const ];
        %tmp.5 = invoke %tmp.1 %tmp.2(%tmp.4);
        %tmp.6 = -1;
        %tmp.7 = ne %tmp.5 %tmp.6;
        ret %tmp.7;
C__DEV_GymTracker_source_SensorService_mc_151_37_153_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 155; @symbol_functiondef = [hasTemperature,155,13,27]; @symbol_return<0> = [Boolean,155,33,40]; ]
    function hasTemperature() as Boolean {
C__DEV_GymTracker_source_SensorService_mc_155_41_157_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 156 8 ]
        %tmp.1 = self;
        symbol [ findSensorIndex %tmp.2 156 15 30 ];
        %tmp.2 = getv function %tmp.1 :findSensorIndex;
        %tmp.4 = const :temperature;
        symbol [ temperature %tmp.4 156 32 43 const ];
        %tmp.5 = invoke %tmp.1 %tmp.2(%tmp.4);
        %tmp.6 = -1;
        %tmp.7 = ne %tmp.5 %tmp.6;
        ret %tmp.7;
C__DEV_GymTracker_source_SensorService_mc_155_41_157_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 159; @symbol_functiondef = [getAvailableSensors,159,13,32]; @symbol_return<0> = [Array,159,38,43]; @symbol_return<1> = [Symbol,159,44,50]; ]
    function getAvailableSensors() as Array<Symbol> {
C__DEV_GymTracker_source_SensorService_mc_159_52_161_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 160 8 ]
        symbol [ availableSensors %tmp.2 160 15 31 ];
        %tmp.2 = getv ? :availableSensors;
        ret %tmp.2;
C__DEV_GymTracker_source_SensorService_mc_159_52_161_4_stop:
    }
    [ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 164; @symbol_functiondef = [handleSensorData,164,13,29]; @symbol_param<0> = [sensorData,164,30,40]; @symbol_param<0>_type<0> = [Dictionary,164,44,54]; ]
    function handleSensorData(sensorData as Dictionary) as Void {
C__DEV_GymTracker_source_SensorService_mc_164_64_190_4_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 165 8 ]
C__DEV_GymTracker_source_SensorService_mc_165_8_170_8_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_165_12_165_63_begin:
        %tmp.1 = lgetv %sensorData;
        symbol [ sensorData %tmp.1 165 12 22 ];
        symbol [ hasKey %tmp.2 165 23 29 ];
        %tmp.2 = getv function %tmp.1 :hasKey;
        %tmp.4 = const :accel;
        symbol [ accel %tmp.4 165 31 36 const ];
        %tmp.5 = invoke %tmp.1 %tmp.2(%tmp.4);
        bf %tmp.5 @C__DEV_GymTracker_source_SensorService_mc_165_8_170_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_165_41_165_63_true:
        %tmp.6 = lgetv %sensorData;
        symbol [ sensorData %tmp.6 165 41 51 ];
        %tmp.8 = const :accel;
        symbol [ accel %tmp.8 165 53 58 const ];
        %tmp.9 = agetv %tmp.6 %tmp.8;
        %tmp.10 = null;
        %tmp.11 = ne %tmp.9 %tmp.10;
        push %tmp.11;
C__DEV_GymTracker_source_SensorService_mc_165_41_165_63_end:
        %tmp.12 = phi [%tmp.5 @C__DEV_GymTracker_source_SensorService_mc_165_12_165_63_begin] [%tmp.11 @C__DEV_GymTracker_source_SensorService_mc_165_41_165_63_true] [%tmp.12 @C__DEV_GymTracker_source_SensorService_mc_165_41_165_63_end];
        bf %tmp.12 @C__DEV_GymTracker_source_SensorService_mc_165_8_170_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_165_8_170_8_if_true:
C__DEV_GymTracker_source_SensorService_mc_165_69_170_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 166 12 ]
        [ "C__DEV_GymTracker_source_SensorService_mc_165_69_170_8_start" "C__DEV_GymTracker_source_SensorService_mc_165_69_170_8_stop" ]
        %accel.1 = local;
        symbol [ accel %accel.1 166 16 21 ];
        %tmp.13 = lgetv %sensorData;
        symbol [ sensorData %tmp.13 166 24 34 ];
        %tmp.15 = const :accel;
        symbol [ accel %tmp.15 166 36 41 const ];
        %tmp.16 = agetv %tmp.13 %tmp.15;
        lputv %accel.1 %tmp.16;
        symbol [ accel %accel.1 166 16 21 ];
[ "C:\DEV\GymTracker\source\SensorService.mc" 167 12 ]
C__DEV_GymTracker_source_SensorService_mc_167_12_169_12_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_167_16_167_63_begin:
        %tmp.17 = lgetv %accel.1;
        symbol [ accel %tmp.17 167 16 21 ];
        symbol [ Lang %tmp.18 167 33 37 ];
        %tmp.18 = getm $.Toybox.Lang;
        symbol [ Array %tmp.19 167 38 43 ];
        %tmp.19 = getv %tmp.18 :Array;
        %tmp.20 = isa %tmp.17 %tmp.19;
        bf %tmp.20 @C__DEV_GymTracker_source_SensorService_mc_167_12_169_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_167_47_167_63_true:
        %tmp.21 = lgetv %accel.1;
        symbol [ accel %tmp.21 167 47 52 ];
        %tmp.22 = as %tmp.21 { (Lang.Array) };
        symbol [ size %tmp.23 167 53 57 ];
        %tmp.23 = getv function %tmp.22 :size;
        %tmp.24 = invoke %tmp.22 %tmp.23();
        %tmp.25 = 3;
        %tmp.26 = gte %tmp.24 %tmp.25;
        push %tmp.26;
C__DEV_GymTracker_source_SensorService_mc_167_47_167_63_end:
        %tmp.27 = phi [%tmp.20 @C__DEV_GymTracker_source_SensorService_mc_167_16_167_63_begin] [%tmp.26 @C__DEV_GymTracker_source_SensorService_mc_167_47_167_63_true] [%tmp.27 @C__DEV_GymTracker_source_SensorService_mc_167_47_167_63_end];
        bf %tmp.27 @C__DEV_GymTracker_source_SensorService_mc_167_12_169_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_167_12_169_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_167_66_169_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 168 16 ]
        symbol [ System %tmp.28 168 16 22 ];
        %tmp.28 = getm $.Toybox.System;
        symbol [ println %tmp.29 168 23 30 ];
        %tmp.29 = getv function %tmp.28 :println;
        %tmp.30 = "Accel: X=";
        %tmp.31 = lgetv %accel.1;
        symbol [ accel %tmp.31 168 45 50 ];
        %tmp.32 = as %tmp.31 { (Lang.Array) };
        %tmp.33 = 0;
        %tmp.34 = agetv %tmp.32 %tmp.33;
        %tmp.35 = add %tmp.30 %tmp.34;
        %tmp.36 = " Y=";
        %tmp.37 = add %tmp.35 %tmp.36;
        %tmp.38 = lgetv %accel.1;
        symbol [ accel %tmp.38 168 64 69 ];
        %tmp.39 = as %tmp.38 { (Lang.Array) };
        %tmp.40 = 1;
        %tmp.41 = agetv %tmp.39 %tmp.40;
        %tmp.42 = add %tmp.37 %tmp.41;
        %tmp.43 = " Z=";
        %tmp.44 = add %tmp.42 %tmp.43;
        %tmp.45 = lgetv %accel.1;
        symbol [ accel %tmp.45 168 83 88 ];
        %tmp.46 = as %tmp.45 { (Lang.Array) };
        %tmp.47 = 2;
        %tmp.48 = agetv %tmp.46 %tmp.47;
        %tmp.49 = add %tmp.44 %tmp.48;
        invoke %tmp.28 %tmp.29(%tmp.49);
C__DEV_GymTracker_source_SensorService_mc_167_66_169_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_167_12_169_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_167_12_169_12_if_end:
C__DEV_GymTracker_source_SensorService_mc_165_69_170_8_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_165_8_170_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_165_8_170_8_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 172 8 ]
C__DEV_GymTracker_source_SensorService_mc_172_8_177_8_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_172_12_172_71_begin:
        %tmp.50 = lgetv %sensorData;
        symbol [ sensorData %tmp.50 172 12 22 ];
        symbol [ hasKey %tmp.51 172 23 29 ];
        %tmp.51 = getv function %tmp.50 :hasKey;
        %tmp.53 = const :gyroscope;
        symbol [ gyroscope %tmp.53 172 31 40 const ];
        %tmp.54 = invoke %tmp.50 %tmp.51(%tmp.53);
        bf %tmp.54 @C__DEV_GymTracker_source_SensorService_mc_172_8_177_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_172_45_172_71_true:
        %tmp.55 = lgetv %sensorData;
        symbol [ sensorData %tmp.55 172 45 55 ];
        %tmp.57 = const :gyroscope;
        symbol [ gyroscope %tmp.57 172 57 66 const ];
        %tmp.58 = agetv %tmp.55 %tmp.57;
        %tmp.59 = null;
        %tmp.60 = ne %tmp.58 %tmp.59;
        push %tmp.60;
C__DEV_GymTracker_source_SensorService_mc_172_45_172_71_end:
        %tmp.61 = phi [%tmp.54 @C__DEV_GymTracker_source_SensorService_mc_172_12_172_71_begin] [%tmp.60 @C__DEV_GymTracker_source_SensorService_mc_172_45_172_71_true] [%tmp.61 @C__DEV_GymTracker_source_SensorService_mc_172_45_172_71_end];
        bf %tmp.61 @C__DEV_GymTracker_source_SensorService_mc_172_8_177_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_172_8_177_8_if_true:
C__DEV_GymTracker_source_SensorService_mc_172_77_177_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 173 12 ]
        [ "C__DEV_GymTracker_source_SensorService_mc_172_77_177_8_start" "C__DEV_GymTracker_source_SensorService_mc_172_77_177_8_stop" ]
        %gyro.2 = local;
        symbol [ gyro %gyro.2 173 16 20 ];
        %tmp.62 = lgetv %sensorData;
        symbol [ sensorData %tmp.62 173 23 33 ];
        %tmp.64 = const :gyroscope;
        symbol [ gyroscope %tmp.64 173 35 44 const ];
        %tmp.65 = agetv %tmp.62 %tmp.64;
        lputv %gyro.2 %tmp.65;
        symbol [ gyro %gyro.2 173 16 20 ];
[ "C:\DEV\GymTracker\source\SensorService.mc" 174 12 ]
C__DEV_GymTracker_source_SensorService_mc_174_12_176_12_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_174_16_174_61_begin:
        %tmp.66 = lgetv %gyro.2;
        symbol [ gyro %tmp.66 174 16 20 ];
        symbol [ Lang %tmp.67 174 32 36 ];
        %tmp.67 = getm $.Toybox.Lang;
        symbol [ Array %tmp.68 174 37 42 ];
        %tmp.68 = getv %tmp.67 :Array;
        %tmp.69 = isa %tmp.66 %tmp.68;
        bf %tmp.69 @C__DEV_GymTracker_source_SensorService_mc_174_12_176_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_174_46_174_61_true:
        %tmp.70 = lgetv %gyro.2;
        symbol [ gyro %tmp.70 174 46 50 ];
        %tmp.71 = as %tmp.70 { (Lang.Array) };
        symbol [ size %tmp.72 174 51 55 ];
        %tmp.72 = getv function %tmp.71 :size;
        %tmp.73 = invoke %tmp.71 %tmp.72();
        %tmp.74 = 3;
        %tmp.75 = gte %tmp.73 %tmp.74;
        push %tmp.75;
C__DEV_GymTracker_source_SensorService_mc_174_46_174_61_end:
        %tmp.76 = phi [%tmp.69 @C__DEV_GymTracker_source_SensorService_mc_174_16_174_61_begin] [%tmp.75 @C__DEV_GymTracker_source_SensorService_mc_174_46_174_61_true] [%tmp.76 @C__DEV_GymTracker_source_SensorService_mc_174_46_174_61_end];
        bf %tmp.76 @C__DEV_GymTracker_source_SensorService_mc_174_12_176_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_174_12_176_12_if_true:
C__DEV_GymTracker_source_SensorService_mc_174_64_176_12_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 175 16 ]
        symbol [ System %tmp.77 175 16 22 ];
        %tmp.77 = getm $.Toybox.System;
        symbol [ println %tmp.78 175 23 30 ];
        %tmp.78 = getv function %tmp.77 :println;
        %tmp.79 = "Gyro: X=";
        %tmp.80 = lgetv %gyro.2;
        symbol [ gyro %tmp.80 175 44 48 ];
        %tmp.81 = as %tmp.80 { (Lang.Array) };
        %tmp.82 = 0;
        %tmp.83 = agetv %tmp.81 %tmp.82;
        %tmp.84 = add %tmp.79 %tmp.83;
        %tmp.85 = " Y=";
        %tmp.86 = add %tmp.84 %tmp.85;
        %tmp.87 = lgetv %gyro.2;
        symbol [ gyro %tmp.87 175 62 66 ];
        %tmp.88 = as %tmp.87 { (Lang.Array) };
        %tmp.89 = 1;
        %tmp.90 = agetv %tmp.88 %tmp.89;
        %tmp.91 = add %tmp.86 %tmp.90;
        %tmp.92 = " Z=";
        %tmp.93 = add %tmp.91 %tmp.92;
        %tmp.94 = lgetv %gyro.2;
        symbol [ gyro %tmp.94 175 80 84 ];
        %tmp.95 = as %tmp.94 { (Lang.Array) };
        %tmp.96 = 2;
        %tmp.97 = agetv %tmp.95 %tmp.96;
        %tmp.98 = add %tmp.93 %tmp.97;
        invoke %tmp.77 %tmp.78(%tmp.98);
C__DEV_GymTracker_source_SensorService_mc_174_64_176_12_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_174_12_176_12_if_end;
C__DEV_GymTracker_source_SensorService_mc_174_12_176_12_if_end:
C__DEV_GymTracker_source_SensorService_mc_172_77_177_8_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_172_8_177_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_172_8_177_8_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 179 8 ]
C__DEV_GymTracker_source_SensorService_mc_179_8_181_8_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_179_12_179_71_begin:
        %tmp.99 = lgetv %sensorData;
        symbol [ sensorData %tmp.99 179 12 22 ];
        symbol [ hasKey %tmp.100 179 23 29 ];
        %tmp.100 = getv function %tmp.99 :hasKey;
        %tmp.102 = const :heartRate;
        symbol [ heartRate %tmp.102 179 31 40 const ];
        %tmp.103 = invoke %tmp.99 %tmp.100(%tmp.102);
        bf %tmp.103 @C__DEV_GymTracker_source_SensorService_mc_179_8_181_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_179_45_179_71_true:
        %tmp.104 = lgetv %sensorData;
        symbol [ sensorData %tmp.104 179 45 55 ];
        %tmp.106 = const :heartRate;
        symbol [ heartRate %tmp.106 179 57 66 const ];
        %tmp.107 = agetv %tmp.104 %tmp.106;
        %tmp.108 = null;
        %tmp.109 = ne %tmp.107 %tmp.108;
        push %tmp.109;
C__DEV_GymTracker_source_SensorService_mc_179_45_179_71_end:
        %tmp.110 = phi [%tmp.103 @C__DEV_GymTracker_source_SensorService_mc_179_12_179_71_begin] [%tmp.109 @C__DEV_GymTracker_source_SensorService_mc_179_45_179_71_true] [%tmp.110 @C__DEV_GymTracker_source_SensorService_mc_179_45_179_71_end];
        bf %tmp.110 @C__DEV_GymTracker_source_SensorService_mc_179_8_181_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_179_8_181_8_if_true:
C__DEV_GymTracker_source_SensorService_mc_179_77_181_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 180 12 ]
        symbol [ System %tmp.111 180 12 18 ];
        %tmp.111 = getm $.Toybox.System;
        symbol [ println %tmp.112 180 19 26 ];
        %tmp.112 = getv function %tmp.111 :println;
        %tmp.113 = "Heart Rate: ";
        %tmp.114 = lgetv %sensorData;
        symbol [ sensorData %tmp.114 180 44 54 ];
        %tmp.116 = const :heartRate;
        symbol [ heartRate %tmp.116 180 56 65 const ];
        %tmp.117 = agetv %tmp.114 %tmp.116;
        %tmp.118 = add %tmp.113 %tmp.117;
        %tmp.119 = " bpm";
        %tmp.120 = add %tmp.118 %tmp.119;
        invoke %tmp.111 %tmp.112(%tmp.120);
C__DEV_GymTracker_source_SensorService_mc_179_77_181_8_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_179_8_181_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_179_8_181_8_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 183 8 ]
C__DEV_GymTracker_source_SensorService_mc_183_8_185_8_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_183_12_183_85_begin:
        %tmp.121 = lgetv %sensorData;
        symbol [ sensorData %tmp.121 183 12 22 ];
        symbol [ hasKey %tmp.122 183 23 29 ];
        %tmp.122 = getv function %tmp.121 :hasKey;
        %tmp.124 = const :oxygenSaturation;
        symbol [ oxygenSaturation %tmp.124 183 31 47 const ];
        %tmp.125 = invoke %tmp.121 %tmp.122(%tmp.124);
        bf %tmp.125 @C__DEV_GymTracker_source_SensorService_mc_183_8_185_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_183_52_183_85_true:
        %tmp.126 = lgetv %sensorData;
        symbol [ sensorData %tmp.126 183 52 62 ];
        %tmp.128 = const :oxygenSaturation;
        symbol [ oxygenSaturation %tmp.128 183 64 80 const ];
        %tmp.129 = agetv %tmp.126 %tmp.128;
        %tmp.130 = null;
        %tmp.131 = ne %tmp.129 %tmp.130;
        push %tmp.131;
C__DEV_GymTracker_source_SensorService_mc_183_52_183_85_end:
        %tmp.132 = phi [%tmp.125 @C__DEV_GymTracker_source_SensorService_mc_183_12_183_85_begin] [%tmp.131 @C__DEV_GymTracker_source_SensorService_mc_183_52_183_85_true] [%tmp.132 @C__DEV_GymTracker_source_SensorService_mc_183_52_183_85_end];
        bf %tmp.132 @C__DEV_GymTracker_source_SensorService_mc_183_8_185_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_183_8_185_8_if_true:
C__DEV_GymTracker_source_SensorService_mc_183_91_185_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 184 12 ]
        symbol [ System %tmp.133 184 12 18 ];
        %tmp.133 = getm $.Toybox.System;
        symbol [ println %tmp.134 184 19 26 ];
        %tmp.134 = getv function %tmp.133 :println;
        %tmp.135 = "SpO2: ";
        %tmp.136 = lgetv %sensorData;
        symbol [ sensorData %tmp.136 184 38 48 ];
        %tmp.138 = const :oxygenSaturation;
        symbol [ oxygenSaturation %tmp.138 184 50 66 const ];
        %tmp.139 = agetv %tmp.136 %tmp.138;
        %tmp.140 = add %tmp.135 %tmp.139;
        %tmp.141 = "%";
        %tmp.142 = add %tmp.140 %tmp.141;
        invoke %tmp.133 %tmp.134(%tmp.142);
C__DEV_GymTracker_source_SensorService_mc_183_91_185_8_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_183_8_185_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_183_8_185_8_if_end:
[ "C:\DEV\GymTracker\source\SensorService.mc" 187 8 ]
C__DEV_GymTracker_source_SensorService_mc_187_8_189_8_if_stmt:
C__DEV_GymTracker_source_SensorService_mc_187_12_187_75_begin:
        %tmp.143 = lgetv %sensorData;
        symbol [ sensorData %tmp.143 187 12 22 ];
        symbol [ hasKey %tmp.144 187 23 29 ];
        %tmp.144 = getv function %tmp.143 :hasKey;
        %tmp.146 = const :temperature;
        symbol [ temperature %tmp.146 187 31 42 const ];
        %tmp.147 = invoke %tmp.143 %tmp.144(%tmp.146);
        bf %tmp.147 @C__DEV_GymTracker_source_SensorService_mc_187_8_189_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_187_47_187_75_true:
        %tmp.148 = lgetv %sensorData;
        symbol [ sensorData %tmp.148 187 47 57 ];
        %tmp.150 = const :temperature;
        symbol [ temperature %tmp.150 187 59 70 const ];
        %tmp.151 = agetv %tmp.148 %tmp.150;
        %tmp.152 = null;
        %tmp.153 = ne %tmp.151 %tmp.152;
        push %tmp.153;
C__DEV_GymTracker_source_SensorService_mc_187_47_187_75_end:
        %tmp.154 = phi [%tmp.147 @C__DEV_GymTracker_source_SensorService_mc_187_12_187_75_begin] [%tmp.153 @C__DEV_GymTracker_source_SensorService_mc_187_47_187_75_true] [%tmp.154 @C__DEV_GymTracker_source_SensorService_mc_187_47_187_75_end];
        bf %tmp.154 @C__DEV_GymTracker_source_SensorService_mc_187_8_189_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_187_8_189_8_if_true:
C__DEV_GymTracker_source_SensorService_mc_187_81_189_8_start:
[ "C:\DEV\GymTracker\source\SensorService.mc" 188 12 ]
        symbol [ System %tmp.155 188 12 18 ];
        %tmp.155 = getm $.Toybox.System;
        symbol [ println %tmp.156 188 19 26 ];
        %tmp.156 = getv function %tmp.155 :println;
        %tmp.157 = "Temperature: ";
        %tmp.158 = lgetv %sensorData;
        symbol [ sensorData %tmp.158 188 45 55 ];
        %tmp.160 = const :temperature;
        symbol [ temperature %tmp.160 188 57 68 const ];
        %tmp.161 = agetv %tmp.158 %tmp.160;
        %tmp.162 = add %tmp.157 %tmp.161;
        %tmp.163 = "°C";
        %tmp.164 = add %tmp.162 %tmp.163;
        invoke %tmp.155 %tmp.156(%tmp.164);
C__DEV_GymTracker_source_SensorService_mc_187_81_189_8_stop:
        goto @C__DEV_GymTracker_source_SensorService_mc_187_8_189_8_if_end;
C__DEV_GymTracker_source_SensorService_mc_187_8_189_8_if_end:
C__DEV_GymTracker_source_SensorService_mc_164_64_190_4_stop:
    }
}
[ @file = "C:\DEV\GymTracker\source\SensorService.mc"; @line = 1; ]
<init> {
}
